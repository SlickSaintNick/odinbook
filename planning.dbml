Table users {
  id integer [primary key]
  email varchar [unique]
  password varchar
  created_at timestamp
  updated_at timestamp
}

Table profiles {
  id integer [primary key]
  user_id integer [unique, not null]
  name varchar
  bio varchar
  role enum [note: 'public', 'admin']
  created_at timestamp
  updated_at timestamp
}

Table follows {
  id integer [primary key]
  following_user_id integer [not null]
  followed_user_id integer [not null]
  status enum [note: 'pending, accepted']
  created_at timestamp
  updated_at timestamp 
  indexes {
    (following_user_id, followed_user_id) [unique]
  }
}

Table posts {
  id integer [primary key]
  body text [note: 'Content of the post']
  status enum [note: 'public, private, archived']
  user_id integer
  created_at timestamp
  updated_at timestamp
}
# UP TO HERE
Table comments {
  id integer [primary key]
  body text [note: 'Content of the comment']
  status enum
  post_id integer
  comment_reply_id integer [null]
  user_id integer
  created_at timestamp
  updated_at timestamp
}

Table liked_posts {
  liking_user_id integer
  liked_post_id integer
  created_at timestamp
  updated_at timestamp
  indexes {
    (liking_user_id, liked_post_id) [unique]
  }
}

Table liked_comments {
  liking_user_id integer
  liked_comment_id integer
  created_at timestamp
  updated_at timestamp
  indexes {
    (liking_user_id, liked_comment_id) [unique]
  }
}

Ref: users.id - profiles.user_id

Ref: users.id < follows.following_user_id
Ref: users.id < follows.followed_user_id

Ref: posts.user_id > users.id

Ref: comments.post_id < posts.id
Ref: comments.user_id < users.id

Ref: users.id < liked_posts.liking_user_id
Ref: liked_posts.liked_post_id < posts.id

Ref: liked_comments.liked_comment_id < comments.id
Ref: liked_comments.liking_user_id < users.id

Ref: comments.comment_reply_id < comments.id